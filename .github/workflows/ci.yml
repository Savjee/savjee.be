---
name: CI

on:
  push:
  pull_request:

jobs:
  linting:
    name: Lint Code Base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lint_commands: ["lint:css", "lint:js", "lint:brokenlinks", "lint:bundlewatch"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build site
        run: npm run build

      - name: ${{ matrix.lint_commands }}
        run: npm run ${{ matrix.lint_commands }}

      - uses: jackyef/bundlewatch-gh-action@master
        with:
          build-script: yarn build:minify
          bundlewatch-github-token: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}

      # Send a message to Slack if the linters failed
      - name: Notify on failure
        uses: 8398a7/action-slack@v3
        if: ${{ failure() }}
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    name: Build & deploy
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build site
        run: npm run build

      - name: Publish
        uses: cloudflare/pages-action@1
        # Only deploy the master branch to Cloudflare via GitHub Actions. Other
        # branches are built by Cloudflare itself, because that's faster.
        if: github.ref == 'refs/heads/master'
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PAGES_PROJECT_NAME }}
          directory: _site # e.g. 'dist'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
