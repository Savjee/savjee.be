name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set env vars (dev)
      if: endsWith(github.ref, '/v5-eleventy')
      run: |
        echo "S3_ID=STAGING_S3_ID" >> $GITHUB_ENV
        echo "S3_SECRET=STAGING_S3_SECRET" >> $GITHUB_ENV
        echo "S3_BUCKET=STAGING_S3_BUCKET" >> $GITHUB_ENV
        echo "GOOGLE_ANALYTICS=STAGING_GOOGLE_ANALYTICS" >> $GITHUB_ENV
    - name: Set env vars (prod)
      if: endsWith(github.ref, '/master')
      run: |
        echo "S3_ID=STAGING_S3_ID" >> $GITHUB_ENV
        echo "S3_SECRET=STAGING_S3_SECRET" >> $GITHUB_ENV
        echo "S3_BUCKET=STAGING_S3_BUCKET" >> $GITHUB_ENV
        echo "GOOGLE_ANALYTICS=STAGING_GOOGLE_ANALYTICS" >> $GITHUB_ENV
    
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '15.x'

    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}

    # Test if the variables work
    - run: echo "$TEST_SECRET"

    - name: Install dependenciea
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    # Inject Google Analytics ID
    - run: sed -i -e 's/UA-XXXXXXXX-X/'"${GOOGLE_ANALYTICS_ID}"'/g' src/site/_assets/js/analytics.js
      env:
        GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}

    # Build Eleventy site
    - run: npm run build

    # Deploy the site to AWS S3 + CloudFront (if non-staging)
    - name: Deploy
      uses: docker://justinharringa/s3_website:master
      with:
        args: 'push'
      env:
        S3_ID: ${{ secrets.S3_ID }}
        S3_SECRET: ${{ secrets.S3_SECRET }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}